---
# tasks file for app-system
- name: Create system group {{ username }}
  group:
    name: "{{ username }}"
    state: present

- name: Create system user {{ username }}
  user:
    name: "{{ username }}"
    home: /home/{{ username }}
    group: "{{ username }}"
    shell: /bin/bash
    state: present
    password: "{{ password | default(omit) }}"

- name: Add nginx user to the app users group {{ username }}
  user:
    name: "{{ nginx_user }}"
    groups:
      - "{{ username }}"
    append: yes

- name: Ensure home folder permissions /home/{{ username }}
  file:
    path: /home/{{ username }}
    state: directory
    mode: "0750"

- name: Determine systemd service lingering state {{ username }}
  command:
    cmd: loginctl show-user --property=Linger {{ username }}
  register: linger_state
  changed_when: false
  ignore_errors: true # fails if the user is not logged in or lingering

- name: Enable systemd service lingering {{ username }}
  command: loginctl enable-linger {{ username }}
  when: linger_state.stdout != 'Linger=yes'

- name: Ensure existing user sub folders
  file:
    path: /home/{{ username }}/{{ item.path }}
    state: directory
    mode: "{{ item.mode | default('0750') }}"
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - path: .config/systemd/user
    - path: .local/bin
    - path: logs
      mode: '0770'
    - path: logs/archive
    - path: .cache

- name: Create mysql config for {{ username }}
  template:
    owner: "{{ username }}"
    group: "{{ username }}"
    src: my.cnf.j2
    dest: /home/{{ username }}/.my.cnf
  vars:
    user: "{{ mysql_username }}"
    password: "{{ mysql_password }}"
    host: "{{ mysql_host }}"
  when: mysql_username | default | length

- name: Setup crons for {{ username }}
  cron:
    name: "{{ cron.name }}"
    job: bash -l -c {{ cron.job | quote }}
    minute: "{{ cron.minute | default(omit) }}"
    hour: "{{ cron.hour | default(omit) }}"
    day: "{{ cron.day | default(omit) }}"
    weekday: "{{ cron.weekday | default(omit) }}"
    month: "{{ cron.month | default(omit) }}"
    special_time: "{{ cron.special_time | default(omit) }}"
    state: present
    user: "{{ username }}"
  loop: "{{ crons }}"
  loop_control:
    loop_var: cron

- name: Create systemd services files
  template:
    dest: /home/{{ username }}/.config/systemd/user/{{ service.name }}.{{ service.type }}
    src: "{{ service.template }}"
    owner: "{{ username }}"
    group: "{{ username }}"
  loop: "{{ systemd_services }}"
  loop_control:
    loop_var: service

- name: Start systemd service
  systemd:
    name: "{{ service.name }}.{{ service.type }}"
    enabled: "{{ service.enabled | default(true) }}"
    state: "{{ services.state | default('started') }}"
    scope: user
    daemon_reload: true
    no_block: true
  become: true
  become_user: "{{ username }}"
  loop: "{{ systemd_services }}"
  loop_control:
    loop_var: service

- name: Setup authorized ssh keys for {{ username }}
  authorized_key:
    comment: "{{ item.comment | default(omit) }}"
    key: "{{ item.key }}"
    state: "{{ item.state | default(omit) }}"
    user: "{{ username }}"
  loop: "{{ ssh_keys }}"

- name: Supply scripts
  include_tasks: scripts.yml
